# =======================================================================
# File: ludus_secondary_child_dc/tasks/main.yml
# Description: This role adds a replica (secondary) Domain Controller
#              to an existing domain in the forest.
# =======================================================================
---
- name: Validate required variables
  assert:
    that:
      - dns_domain_name is defined
      - existing_dc_ip is defined
      - ad_domain_admin is defined
      - ad_domain_admin_password is defined
      - ad_domain_safe_mode_password is defined
    fail_msg: "Missing required domain configuration or credential variable(s)."

- name: Install AD DS role
  ansible.windows.win_feature:
    name: AD-Domain-Services
  register: ad_role
  check_mode: no

- name: Reboot after feature install (if required)
  ansible.windows.win_reboot:
    reboot_timeout: 600
  when: ad_role.reboot_required

- name: Configure DNS to resolve existing domain before promotion
  ansible.windows.win_dns_client:
    adapter_names: "*"
    ipv4_addresses:
      - "{{ existing_dc_ip }}"
      - "127.0.0.1" # Also include loopback for when this becomes a DC

- name: Promote this server to a replica Domain Controller
  microsoft.ad.domain_controller:
    dns_domain_name: "{{ dns_domain_name }}"
    domain_admin_user: "{{ ad_domain_admin }}@{{ dns_domain_name }}"
    domain_admin_password: "{{ ad_domain_admin_password }}"
    safe_mode_password: "{{ ad_domain_safe_mode_password }}"
    site_name: "{{ site_name }}"
    state: domain_controller # The module infers it's a replica because the domain exists
    replication_source_dc: "{{ existing_dc_ip }}"
    install_dns: true
    reboot: no
  register: promotion
  check_mode: no
  #no_log: true # Commented out for debugging, per user preference

- name: Reboot after promotion (if required)
  ansible.windows.win_reboot:
    reboot_timeout: 900
  when: promotion.reboot_required

- name: Wait for LDAP port {{ ldap_port }} to become available
  ansible.windows.win_wait_for:
    port: "{{ ldap_port }}"
    host: "{{ ansible_host }}"
    delay: "{{ ldap_delay }}"
    timeout: "{{ ldap_timeout }}"
